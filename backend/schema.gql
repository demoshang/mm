# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Album {
  id: String!
  provider: Provider!
  name: String!
  img: String
}

type Artist {
  id: String!
  provider: Provider!
  name: String!
}

type Base {
  id: String!
  provider: Provider!
}

enum BitRate {
  mid
  high
  sq
  hq
}

type Krc {
  id: String!
  provider: Provider!
  ti: String
  ar: String
  al: String
  by: String
  items: [KrcArray!]!
}

scalar KrcArray

type Lrc {
  id: String!
  provider: Provider!
  ti: String
  ar: String
  al: String
  by: String
  items: [LrcItem!]!
}

type LrcItem {
  duration: Float
  offset: Float
  line: String!
}

type Mutation {
  addPeakTime(peak: SongPeaksInput!, provider: Provider!, id: String!): Boolean!
}

enum Privilege {
  deny
  allow
  unknown
}

enum Provider {
  kugou
  netease
  adapterQQ
}

type Query {
  lrc(milliseconds: Float, keyword: String, provider: Provider!, id: String!): Lrc
  krc(milliseconds: Float, keyword: String, provider: Provider!, id: String!): Krc
  song(provider: Provider!, id: String!): Song
  search(providers: [Provider!], keyword: String!): [SearchSong!]!
  url(br: BitRate, provider: Provider!, id: String!): String!
  parseUrl(url: String!): [SearchSong!]!
  getPeak(duration: Float!, provider: Provider!, id: String!): SongPeaks!
}

type SearchAlbum {
  id: String
  name: String!
  img: String
}

type SearchArtist {
  id: String
  name: String!
}

type SearchSong {
  id: String!
  provider: Provider!
  name: String!
  privilege: Privilege
  artists: [SearchArtist!]
  album: SearchAlbum
  duration: Float
}

type Song {
  id: String!
  provider: Provider!
  name: String!
  duration: Float
  klyric: String
  lrc: String
  privilege: String
  artists: [Artist!]
  album: Album
  peaks: [SongPeaks!]
  startTime(duration: Int): Float
}

type SongPeaks {
  id: String!
  provider: Provider!
  duration: Int!
  startTime: Float!
}

input SongPeaksInput {
  precision: Int!
  peaks: [Float!]!
}
